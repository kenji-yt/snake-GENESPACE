## Check minimum Snakemake version

from snakemake.utils import min_version

min_version("5.20.1")

## Import required libraries
import os

## Configuration file check

if len(config) == 0:
    if os.path.isfile("config/config.yaml"):

        configfile: "config/config.yaml"

    else:
        sys.exit(
            f"Make sure there is a config.yaml file in {os.getcwd()} or specify one with the --configfile commandline parameter."
        )


## Parse config file

OUTPUT_DIR = os.path.normpath(config["OUTPUT"])
INPUT_DIR = os.path.normpath(config["INPUT"])
SCRIPTS_DIR = os.path.normpath("workflow/scripts/") # Was defined in config before. Is there a reason for that?
N_PROG = config["N_PROGENITORS"]
genespace_parse_threads= N_PROG if N_PROG < workflow.cores else 1 # Just in case more than 2 progenitors.

rule all:
    input:
        genespace_input_dir=directory(f"{OUTPUT_DIR}/genespace/input_dir"),
        genespace_insall_log=f"{OUTPUT_DIR}/logs/genespace/install_genespace.log",


rule run_genespace:
    input:
        genespace_input_dir=directory(f"{OUTPUT_DIR}/genespace/input_dir"),
    output:
        genespace_input_dir=directory(f"{OUTPUT_DIR}/genespace/input_dir"),
    params:
        scripts=f"{SCRIPTS_DIR}"
    log:
        f"{OUTPUT_DIR}/logs/genespace/parse_genespace_input.log",
    threads:genespace_parse_threads
    conda:
        "../envs/genespace.yaml",
    shell:
        "bash {params.scripts}/parse_genespace_input.sh -i {input.input_dir} -o {output.genespace_input_dir} -l {log} -c {threads} 2> {log}" 


rule parse_genespace_input:
    input:
        input_dir=f"{INPUT_DIR}",
    output:
        genespace_input_dir=directory(f"{OUTPUT_DIR}/genespace/input_dir"),
    params:
        scripts=f"{SCRIPTS_DIR}"
    log:
        f"{OUTPUT_DIR}/logs/genespace/parse_genespace_input.log",
    threads:genespace_parse_threads
    conda:
        "../envs/genespace.yaml",
    shell:
        "bash {params.scripts}/parse_genespace_input.sh -i {input.input_dir} -o {output.genespace_input_dir} -l {log} -c {threads} 2> {log}" 


rule install_genespace:
    input:
        f"{OUTPUT_DIR}/logs/genespace/MCScanX/MScanX_install.log",
    log:
        f"{OUTPUT_DIR}/logs/genespace/install_genespace.log",
    conda:
        "../envs/genespace.yaml",
    script:
        "scripts/install_genespace.R" 



rule install_MCScanX:
    input:
        mc_scan_dir=f"{OUTPUT_DIR}/genespace/MCScanX/github_directory",
    params:
        mc_scan_dir=f"{OUTPUT_DIR}/genespace/MCScanX/",
    log:
        f"{OUTPUT_DIR}/logs/genespace/MCScanX/MScanX_install.log",
    conda:
        "../envs/genespace.yaml",
    shell:
        "make -C {input.mc_scan_dir}" 


rule download_MCScanX:
    output:
        mc_scan_dir=directory(f"{OUTPUT_DIR}/genespace/MCScanX/github_directory"),
    log:
        f"{OUTPUT_DIR}/logs/genespace/MCScanX/MCScanX_dowload.log",
    shell:
        "git clone https://github.com/wyp1125/MCScanX {output.mc_scan_dir}"





